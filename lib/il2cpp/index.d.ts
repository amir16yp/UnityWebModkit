import { Result } from "neverthrow";
import { Il2CppContextCreationError, MetadataParsingError } from "../errors";
export type Il2CppMetadata = {
    buffer: ArrayBuffer;
    header: Il2CppGlobalMetadataHeader;
    imageDefs: Il2CppImageDefinition[];
    typeDefs: Il2CppTypeDefinition[];
    methodDefs: Il2CppMethodDefinition[];
    originalImageDefCount: number;
    originalMethodDefCount: number;
    version: number;
};
type Il2CppGlobalMetadataHeader = {
    sanity: number;
    version: number;
    stringLiteralOffset: number;
    stringLiteralSize: number;
    stringLiteralDataOffset: number;
    stringLiteralDataSize: number;
    stringOffset: number;
    stringSize: number;
    eventsOffset: number;
    eventsSize: number;
    propertiesOffset: number;
    propertiesSize: number;
    methodsOffset: number;
    methodsSize: number;
    parameterDefaultValuesOffset: number;
    parameterDefaultValuesSize: number;
    fieldDefaultValuesOffset: number;
    fieldDefaultValuesSize: number;
    fieldAndParameterDefaultValueDataOffset: number;
    fieldAndParameterDefaultValueDataSize: number;
    fieldMarshaledSizesOffset: number;
    fieldMarshaledSizesSize: number;
    parametersOffset: number;
    parametersSize: number;
    fieldsOffset: number;
    fieldsSize: number;
    genericParametersOffset: number;
    genericParametersSize: number;
    genericParameterConstraintsOffset: number;
    genericParameterConstraintsSize: number;
    genericContainersOffset: number;
    genericContainersSize: number;
    nestedTypesOffset: number;
    nestedTypesSize: number;
    interfacesOffset: number;
    interfacesSize: number;
    vtableMethodsOffset: number;
    vtableMethodsSize: number;
    interfaceOffsetsOffset: number;
    interfaceOffsetsSize: number;
    typeDefinitionsOffset: number;
    typeDefinitionsSize: number;
    imagesOffset: number;
    imagesSize: number;
    assembliesOffset: number;
    assembliesSize: number;
    fieldRefsOffset: number;
    fieldRefsSize: number;
    referencedAssembliesOffset: number;
    referencedAssembliesSize: number;
    attributeDataOffset: number;
    attributeDataSize: number;
    attributeDataRangeOffset: number;
    attributeDataRangeSize: number;
    unresolvedVirtualCallParameterTypesOffset: number;
    unresolvedVirtualCallParameterTypesSize: number;
    unresolvedVirtualCallParameterRangesOffset: number;
    unresolvedVirtualCallParameterRangesSize: number;
    windowsRuntimeTypeNamesOffset: number;
    windowsRuntimeTypeNamesSize: number;
    windowsRuntimeStringsOffset: number;
    windowsRuntimeStringsSize: number;
    exportedTypeDefinitionsOffset: number;
    exportedTypeDefinitionsSize: number;
};
type Il2CppImageDefinition = {
    nameIndex: number;
    assemblyIndex: number;
    typeStart: number;
    typeCount: number;
    exportedTypeStart: number;
    exportedTypeCount: number;
    entryPointIndex: number;
    token: number;
    customAttributeStart: number;
    customAttributeCount: number;
};
type Il2CppTypeDefinition = {
    typeIndex?: number;
    nameIndex: number;
    namespaceIndex: number;
    byvalTypeIndex: number;
    declaringTypeIndex: number;
    parentIndex: number;
    elementTypeIndex: number;
    genericContainerIndex: number;
    flags: number;
    fieldStart: number;
    methodStart: number;
    eventStart: number;
    propertyStart: number;
    nestedTypesStart: number;
    interfacesStart: number;
    vtableStart: number;
    interfaceOffsetsStart: number;
    method_count: number;
    property_count: number;
    field_count: number;
    event_count: number;
    nested_type_count: number;
    vtable_count: number;
    interfaces_count: number;
    interface_offsets_count: number;
    bitfield: number;
    token: number;
};
type Il2CppMethodDefinition = {
    methodIndex?: number;
    nameIndex: number;
    declaringType: number;
    returnType: number;
    parameterStart: number;
    genericContainerIndex: number;
    token: number;
    flags: number;
    iflags: number;
    slot: number;
    parameterCount: number;
};
export type Il2CppContext = {
    codeGenModules: Il2CppCodeGenModuleCollection;
    codeGenModuleMethodPointers: Il2CppCodeGenModuleMethodPointers;
    scriptData: Il2CppScriptData;
};
type Il2CppCodeGenModule = {
    moduleName: number;
    methodPointerCount: number;
    methodPointers: number;
    adjustorThunkCount: number;
    adjustorThunks: number;
    invokerIndices: number;
    reversePInvokeWrapperCount: number;
    reversePInvokeWrapperIndices: number;
    rgctxRangesCount: number;
    rgctxRanges: number;
    rgctxsCount: number;
    rgctxs: number;
    debuggerMetadata: number;
    moduleInitializer: number;
    staticConstructorTypeIndices: number;
    metadataRegistration: number;
    codeRegistration: number;
};
type Il2CppCodeGenModuleCollection = {
    [moduleName: string]: Il2CppCodeGenModule;
};
type Il2CppCodeGenModuleMethodPointers = {
    [moduleName: string]: number[];
};
type Il2CppScriptData = {
    [typeName: string]: {
        [methodName: string]: number;
    };
};
export declare function createIl2CppContext(buffer: ArrayBuffer, metadata: Il2CppMetadata, referencedAssemblies?: string[]): Result<Il2CppContext, Il2CppContextCreationError>;
export declare function createMetadata(buffer: ArrayBuffer, referencedAssemblies?: string[]): Result<Il2CppMetadata, MetadataParsingError>;
export {};
//# sourceMappingURL=index.d.ts.map